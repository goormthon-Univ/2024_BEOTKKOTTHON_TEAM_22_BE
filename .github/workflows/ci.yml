# 1 워크플로의 이름 지정
name: CI


# 2 워크플로가 시작될 조건 지정
on:
  push:
    branches: [ main ]
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest # 3 실행 환경 지정
    #4 실행스텝지정
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test



      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy
      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./coinTalk.zip ./deploy
        shell: bash


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./coinTalk.zip s3://fundingprofileimagedata/



      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:
          aws deploy create-deployment --application-name coinTalk --deployment-group-name coin-group --file-exists-behavior OVERWRITE --s3-location bucket=fundingprofileimagedata,bundleType=zip,key=coinTalk.zip --region ap-northeast-2
